//
// Include this file into the project's root-level build.gradle file.
//
// buildscript {
//   apply from: "$rootDir/buildconfig.gradle"
// }
//
buildscript {
    ext {
        def hasOptional = { key, defaultValue -> rootProject.hasProperty(key) ? rootProject[key] : defaultValue }

        agentRepo = hasOptional('agentRepo', "local")
        compiler = hasOptional('compiler', 'r8')        // [proguard, r8, dexguard, dexguardLegacy]
        minify = hasOptional('minifyEnabled', true)
        withProductFlavors = hasOptional('withProductFlavors', false)
        applyPlugin = hasOptional('applyPlugin', true)

        newrelic = [
                agent: [
                        version : hasOptional('newrelic.agent.version', '6.+'),
                        snapshot: hasOptional('newrelic.agent.snapshot', null),
                        ndk     : hasOptional('newrelic.ndk.version', '1.+')
                ]
        ]

        newrelic.agent.snapshotUri = uri("https://oss.sonatype.org/content/repositories/comnewrelic-$newrelic.agent.snapshot")

        newrelic.deps = [
                agent : "com.newrelic.agent.android:android-agent:" + newrelic.agent.version,
                plugin: "com.newrelic.agent.android:agent-gradle-plugin:" + newrelic.agent.version,
                ndk   : "com.newrelic.agent.android:agent-ndk:" + newrelic.agent.ndk,
        ]

        versions = [
                gradle: hasOptional("newrelic.gradle.version", "7.0.2"),

                agp     : [
                        plugin    : hasOptional('newrelic.agp.version', "7.0.+"),
                        targetSdk : 30,
                        compileSdk: 30,
                        minSdk    : 24,
                        supportLib: "28.+"
                ],

                dexguard: [
                        base  : hasOptional('dexguard.base.version', '9.3.6'),
                        plugin: hasOptional('dexguard.plugin.version', '1.+'),
                        home  : hasOptional('dexguard.home', '')
                ],

                kotlin  : hasOptional('newrelic.kotlin.version', '1.6.+'),
                gson  : '2.10.1'
        ]
    }

    logger.debug "[newrelic] $project.ext.properties"

    // DG 9+ requires Maven auth token
    if (project.compiler == 'dexguard') {
        if (!project.properties.containsKey("dexguardMavenToken")) {
            throw new RuntimeException("Testing with DexGuard 9+ requires DexGuard Maven token!")
        }
    }
}

wrapper {
    gradleVersion = versions.gradle
}

allprojects {
    ext.newrelic = rootProject.newrelic

    buildscript {
        repositories {
            if (project.compiler.startsWith('dexguard')) {
                if (versions.dexguard.home) {
                    flatDir { dirs "${versions.dexguard.home}/${versions.dexguard.base}/lib" }
                } else {
                    maven {
                        credentials {
                            username = "maven"
                            password = "${dexguardMavenToken}"
                        }
                        url "https://maven.guardsquare.com"
                        content {
                            includeGroupByRegex "com\\.guardsquare.*"
                        }
                        authentication {
                            basic(BasicAuthentication)
                        }
                    }
                }
                maven { url newrelic.agent.snapshotUri }
            }
        }

        dependencies {
            classpath newrelic.deps.plugin
            if (project.compiler.startsWith('dexguard')) {
                classpath "com.guardsquare:dexguard-gradle-plugin:${versions.dexguard.plugin}"
            }
        }
    }

    repositories {
        if (project.compiler.startsWith('dexguard')) {
            if (versions.dexguard.home) {
                flatDir { dirs "${versions.dexguard.home}/${versions.dexguard.base}/lib" }
            } else {
                maven {
                    credentials {
                        username = "maven"
                        password = "${dexguardMavenToken}"
                    }
                    url "https://maven.guardsquare.com"
                    content {
                        includeGroupByRegex "com\\.guardsquare.*"
                    }
                    authentication {
                        basic(BasicAuthentication)
                    }
                }
            }
            maven { url newrelic.agent.snapshotUri }
        }
    }
}
