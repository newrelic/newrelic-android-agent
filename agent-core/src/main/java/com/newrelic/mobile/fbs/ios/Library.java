// automatically generated by the FlatBuffers compiler, do not modify

package com.newrelic.mobile.fbs.ios;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Library extends Table {
  public static Library getRootAsLibrary(ByteBuffer _bb) { return getRootAsLibrary(_bb, new Library()); }
  public static Library getRootAsLibrary(ByteBuffer _bb, Library obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public Library __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long uuidLow() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public boolean mutateUuidLow(long uuidLow) { int o = __offset(4); if (o != 0) { bb.putLong(o + bb_pos, uuidLow); return true; } else { return false; } }
  public long uuidHigh() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public boolean mutateUuidHigh(long uuidHigh) { int o = __offset(6); if (o != 0) { bb.putLong(o + bb_pos, uuidHigh); return true; } else { return false; } }
  public long address() { int o = __offset(8); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public boolean mutateAddress(long address) { int o = __offset(8); if (o != 0) { bb.putLong(o + bb_pos, address); return true; } else { return false; } }
  public boolean userLibrary() { int o = __offset(10); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean mutateUserLibrary(boolean userLibrary) { int o = __offset(10); if (o != 0) { bb.put(o + bb_pos, (byte)(userLibrary ? 1 : 0)); return true; } else { return false; } }
  public int arch() { int o = __offset(12); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public boolean mutateArch(int arch) { int o = __offset(12); if (o != 0) { bb.put(o + bb_pos, (byte)arch); return true; } else { return false; } }
  public long size() { int o = __offset(14); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public boolean mutateSize(long size) { int o = __offset(14); if (o != 0) { bb.putLong(o + bb_pos, size); return true; } else { return false; } }
  public String path() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer pathAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer pathInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }

  public static int createLibrary(FlatBufferBuilder builder,
      long uuidLow,
      long uuidHigh,
      long address,
      boolean userLibrary,
      int arch,
      long size,
      int pathOffset) {
    builder.startObject(7);
    Library.addSize(builder, size);
    Library.addAddress(builder, address);
    Library.addUuidHigh(builder, uuidHigh);
    Library.addUuidLow(builder, uuidLow);
    Library.addPath(builder, pathOffset);
    Library.addArch(builder, arch);
    Library.addUserLibrary(builder, userLibrary);
    return Library.endLibrary(builder);
  }

  public static void startLibrary(FlatBufferBuilder builder) { builder.startObject(7); }
  public static void addUuidLow(FlatBufferBuilder builder, long uuidLow) { builder.addLong(0, uuidLow, 0L); }
  public static void addUuidHigh(FlatBufferBuilder builder, long uuidHigh) { builder.addLong(1, uuidHigh, 0L); }
  public static void addAddress(FlatBufferBuilder builder, long address) { builder.addLong(2, address, 0L); }
  public static void addUserLibrary(FlatBufferBuilder builder, boolean userLibrary) { builder.addBoolean(3, userLibrary, false); }
  public static void addArch(FlatBufferBuilder builder, int arch) { builder.addByte(4, (byte)arch, (byte)0); }
  public static void addSize(FlatBufferBuilder builder, long size) { builder.addLong(5, size, 0L); }
  public static void addPath(FlatBufferBuilder builder, int pathOffset) { builder.addOffset(6, pathOffset, 0); }
  public static int endLibrary(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishLibraryBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedLibraryBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }
}

