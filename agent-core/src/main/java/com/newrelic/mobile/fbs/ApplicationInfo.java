// automatically generated by the FlatBuffers compiler, do not modify

package com.newrelic.mobile.fbs;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ApplicationInfo extends Table {
  public static ApplicationInfo getRootAsApplicationInfo(ByteBuffer _bb) { return getRootAsApplicationInfo(_bb, new ApplicationInfo()); }
  public static ApplicationInfo getRootAsApplicationInfo(ByteBuffer _bb, ApplicationInfo obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public ApplicationInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ApplicationLicense applicationLicense() { return applicationLicense(new ApplicationLicense()); }
  public ApplicationLicense applicationLicense(ApplicationLicense obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public int platform() { int o = __offset(6); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public boolean mutatePlatform(int platform) { int o = __offset(6); if (o != 0) { bb.put(o + bb_pos, (byte)platform); return true; } else { return false; } }
  public String appVersion() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer appVersionAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer appVersionInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public long appVersionId() { int o = __offset(10); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public boolean mutateAppVersionId(long appVersionId) { int o = __offset(10); if (o != 0) { bb.putLong(o + bb_pos, appVersionId); return true; } else { return false; } }
  public int framework() { int o = __offset(12); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public boolean mutateFramework(int framework) { int o = __offset(12); if (o != 0) { bb.put(o + bb_pos, (byte)framework); return true; } else { return false; } }

  public static int createApplicationInfo(FlatBufferBuilder builder,
      int applicationLicenseOffset,
      int platform,
      int appVersionOffset,
      long appVersionId,
      int framework) {
    builder.startObject(5);
    ApplicationInfo.addAppVersionId(builder, appVersionId);
    ApplicationInfo.addAppVersion(builder, appVersionOffset);
    ApplicationInfo.addApplicationLicense(builder, applicationLicenseOffset);
    ApplicationInfo.addFramework(builder, framework);
    ApplicationInfo.addPlatform(builder, platform);
    return ApplicationInfo.endApplicationInfo(builder);
  }

  public static void startApplicationInfo(FlatBufferBuilder builder) { builder.startObject(5); }
  public static void addApplicationLicense(FlatBufferBuilder builder, int applicationLicenseOffset) { builder.addOffset(0, applicationLicenseOffset, 0); }
  public static void addPlatform(FlatBufferBuilder builder, int platform) { builder.addByte(1, (byte)platform, (byte)0); }
  public static void addAppVersion(FlatBufferBuilder builder, int appVersionOffset) { builder.addOffset(2, appVersionOffset, 0); }
  public static void addAppVersionId(FlatBufferBuilder builder, long appVersionId) { builder.addLong(3, appVersionId, 0L); }
  public static void addFramework(FlatBufferBuilder builder, int framework) { builder.addByte(4, (byte)framework, (byte)0); }
  public static int endApplicationInfo(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

