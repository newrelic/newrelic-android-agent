// automatically generated by the FlatBuffers compiler, do not modify

package com.newrelic.mobile.fbs.jserror;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class JsError extends Table {
  public static JsError getRootAsJsError(ByteBuffer _bb) { return getRootAsJsError(_bb, new JsError()); }
  public static JsError getRootAsJsError(ByteBuffer _bb, JsError obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public JsError __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String name() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String message() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer messageAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer messageInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public boolean fatal() { int o = __offset(8); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean mutateFatal(boolean fatal) { int o = __offset(8); if (o != 0) { bb.put(o + bb_pos, (byte)(fatal ? 1 : 0)); return true; } else { return false; } }
  public Thread thread() { return thread(new Thread()); }
  public Thread thread(Thread obj) { int o = __offset(10); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public String buildId() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer buildIdAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer buildIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  public String bundleId() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer bundleIdAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer bundleIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }

  public static int createJsError(FlatBufferBuilder builder,
      int nameOffset,
      int messageOffset,
      boolean fatal,
      int threadOffset,
      int buildIdOffset,
      int bundleIdOffset) {
    builder.startObject(6);
    JsError.addBundleId(builder, bundleIdOffset);
    JsError.addBuildId(builder, buildIdOffset);
    JsError.addThread(builder, threadOffset);
    JsError.addMessage(builder, messageOffset);
    JsError.addName(builder, nameOffset);
    JsError.addFatal(builder, fatal);
    return JsError.endJsError(builder);
  }

  public static void startJsError(FlatBufferBuilder builder) { builder.startObject(6); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(0, nameOffset, 0); }
  public static void addMessage(FlatBufferBuilder builder, int messageOffset) { builder.addOffset(1, messageOffset, 0); }
  public static void addFatal(FlatBufferBuilder builder, boolean fatal) { builder.addBoolean(2, fatal, false); }
  public static void addThread(FlatBufferBuilder builder, int threadOffset) { builder.addOffset(3, threadOffset, 0); }
  public static void addBuildId(FlatBufferBuilder builder, int buildIdOffset) { builder.addOffset(4, buildIdOffset, 0); }
  public static void addBundleId(FlatBufferBuilder builder, int bundleIdOffset) { builder.addOffset(5, bundleIdOffset, 0); }
  public static int endJsError(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishJsErrorBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedJsErrorBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }
}

